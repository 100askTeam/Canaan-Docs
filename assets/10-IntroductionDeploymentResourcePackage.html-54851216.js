import{_ as e,o as a,c as o,e as c}from"./app-e64799d6.js";const t={},p=c('<h1 id="_1-资源包介绍" tabindex="-1"><a class="header-anchor" href="#_1-资源包介绍" aria-hidden="true">#</a> 1.资源包介绍</h1><p>当我们在AI Matrix软件中，训练完成模型后，点击部署就会生成对应的端侧部署资源包在对应的项目目录中，生成的端侧部署资源包名称为：<code>deployment_source.zip</code></p><p>解压该压缩包后可以得到三个文件夹，分别是：example_code、excute_demo_on_k510、TEMP。</p><p>example_code：包含部署示例代码，可以参考这部分代码将模型推理融入自己代码中。</p><p>excute_demo_on_k510：保存芯片端的可执行程序，用户可以直接在芯片端直接运行该程序。</p><p>TEMP：保存有用户训练的模型文件。</p><h2 id="_1-模型文件" tabindex="-1"><a class="header-anchor" href="#_1-模型文件" aria-hidden="true">#</a> 1.模型文件</h2><p>进入TEMP目录中的项目目录中可以看到对应的模型文件，如下图所示：</p><p><img src="http://photos.100ask.net/canaan-docs/image-20240523171917882.png" alt="image-20240523171917882"></p><blockquote><p>kmodel:K510芯片端使用的模型文件</p><p>json：模型的信息文件，包含推理宽度和高度等信息。</p></blockquote><h2 id="_2-可执行程序" tabindex="-1"><a class="header-anchor" href="#_2-可执行程序" aria-hidden="true">#</a> 2.可执行程序</h2><p>进入excute_demo_on_k510目录中，可以看到对应的可执行程序。如下所示:</p><p><img src="http://photos.100ask.net/canaan-docs/image-20240523172228277.png" alt="image-20240523172228277"></p><blockquote><p>demo：芯片端的可执行程序。</p><p>conf:配置文件，如摄像头的配置参数信息。</p><p>ReadMe:详细介绍如何在K510上执行该程序。</p></blockquote><h2 id="_3-部署示例代码" tabindex="-1"><a class="header-anchor" href="#_3-部署示例代码" aria-hidden="true">#</a> 3.部署示例代码</h2><p>进入example_code目录中，可以看到对应的示例代码。如下所示:</p><p><img src="http://photos.100ask.net/canaan-docs/image-20240523173320482.png" alt="image-20240523173320482"></p><blockquote><ol><li>cmake：cmake编译所需文件</li><li>common：目录中包含K510 CRB开发板中对摄像头、屏幕操作的头文件</li><li>demo_code：目录中是与平台适配的C++ code，用户可通过修改、编译代码，重新生成demo可执行文件</li><li>jsoncpp：读取deploy_config.json所需的库文件</li><li>build.sh：编译脚本，下文会介绍如何使用</li><li>CMakeLists.txt：CMake编译配置文件</li><li>Readme.md：介绍如何使用示例代码。</li></ol></blockquote>',18),i=[p];function n(d,l){return a(),o("div",null,i)}const r=e(t,[["render",n],["__file","10-IntroductionDeploymentResourcePackage.html.vue"]]);export{r as default};
